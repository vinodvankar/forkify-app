{"mappings":"AAAA,KAAK,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAS;AAExD,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IAC5B,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,EAAE,MAAM,EAAE,CAAC;QACvC,UAAU,CAAC,QAAQ,GAAI,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,qCAAqC,EAAE,CAAC,CAAC,OAAO;QACpE,CAAC,EAAE,CAAC,GAAG,IAAI;IACb,CAAC;AACH,CAAC;AAED,EAAuC,AAAvC,qCAAuC;AAEvC,EAAwB,AAAxB,sBAAwB;AACxB,KAAK,CAAC,UAAU,aAAe,CAAC;IAC9B,GAAG,CAAC,CAAC;QACH,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CACrB,EAAwD,AAAxD,sDAAwD;QACxD,CAAqD;QAGvD,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI;QAC3B,EAAE,GAAG,GAAG,CAAC,EAAE,EACT,KAAK,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEnD,GAAG,CAAC,CAAC,CAAC,MAAM,EAAC,CAAC,GAAG,IAAI;QACrB,EAAqB,AAArB,mBAAqB;QAErB,MAAM,GAAG,CAAC;YACR,EAAE,EAAE,MAAM,CAAC,SAAS;YACpB,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,SAAS,EAAE,MAAM,CAAC,SAAS;YAC3B,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,SAAS,EAAE,MAAM,CAAC,UAAU;YAC5B,WAAW,EAAE,MAAM,CAAC,WAAW;YAC/B,KAAK,EAAE,MAAM,CAAC,SAAS;QACzB,CAAC;QACD,EAAqD,AAArD,mDAAqD;QACrD,EAA2C,AAA3C,yCAA2C;QAC3C,EAAM,AAAN,IAAM;QACN,OAAO,CAAC,GAAG,CAAC,MAAM;QAElB,EAAkB,AAAlB,gBAAkB;QAClB,KAAK,CAAC,MAAM,IAAI,oDAEF,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,2EAEtC,EAAE,MAAM,CAAC,KAAK,CAAC,0SASsC,EACzD,MAAM,CAAC,WAAW,CACnB,iWAQ+B,EAAE,MAAM,CAAC,QAAQ,CAAC,67BAgCpD,EAAE,MAAM,CAAC,WAAW,CACjB,GAAG,EAAC,UAAU,GAAI,CAAC;YAClB,KAAK,CAAC,GAAG,GAAG,UAAU,CAAC,KAAK,CAAC,CAAG;YAChC,MAAM,EAAE,6MAKsB,EAAE,GAAG,CAAC,CAAC,EAAE,8FAEV,EAAE,GAAG,CAAC,CAAC,EAAE,sBACpC,EAAE,GAAG,CAAC,CAAC,EAAE,8CAGb;QACA,CAAC,EACA,IAAI,CAAC,CAAE,GAAE,yQASsB,EAC9B,MAAM,CAAC,SAAS,CACjB,kJAKK,EAAE,MAAM,CAAC,SAAS,CAAC,qNAQ/B;QAEA,eAAe,CAAC,SAAS,GAAG,CAAE;QAC9B,eAAe,CAAC,kBAAkB,CAAC,CAAY,aAAE,MAAM;IACzD,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,GAAG,CAAC,GAAG;IACjB,CAAC;AACH,CAAC;AACD,UAAU","sources":["src/js/controller.js"],"sourcesContent":["const recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n//fetching data from api\nconst showRecipe = async () => {\n  try {\n    const res = await fetch(\n      // 'https://forkify-api.herokuapp.com/api/get?rId=47746'\n      'https://forkify-api.herokuapp.com/api/get?rId=46956'\n      // 'https://forkify-api.herokuapp.com/api/search?q=pizza'\n    );\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(`${data.messages}(${data.status})`);\n    }\n    let { recipe } = data;\n    // console.log(data);\n\n    recipe = {\n      id: recipe.recipe_id,\n      title: recipe.title,\n      publisher: recipe.publisher,\n      ingredients: recipe.ingredients,\n      sourceUrl: recipe.source_url,\n      cookingTime: recipe.cookingTime,\n      image: recipe.image_url,\n    };\n    // const ingredient = recipe.ingredients.map(ing => {\n    //   console.log(ing.split(' ').slice(-1));\n    // });\n    console.log(recipe);\n\n    // redering recipe\n    const markup = `\n    <figure class=\"recipe__fig\">\n        <img src=\"${recipe.image}\" alt=${recipe.title} class=\"recipe__img\" />\n        <h1 class=\"recipe__title\">\n          <span>${recipe.title}</span>\n        </h1>\n      </figure>\n\n      <div class=\"recipe__details\">\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-clock\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--minutes\">${\n            recipe.cookingTime\n          }</span>\n          <span class=\"recipe__info-text\">minutes</span>\n        </div>\n        <div class=\"recipe__info\">\n          <svg class=\"recipe__info-icon\">\n            <use href=\"src/img/icons.svg#icon-users\"></use>\n          </svg>\n          <span class=\"recipe__info-data recipe__info-data--people\">4</span>\n          <span class=\"recipe__info-text\">${recipe.servings}</span>\n\n          <div class=\"recipe__info-buttons\">\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n              </svg>\n            </button>\n            <button class=\"btn--tiny btn--increase-servings\">\n              <svg>\n                <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        <div class=\"recipe__user-generated\">\n          <svg>\n            <use href=\"src/img/icons.svg#icon-user\"></use>\n          </svg>\n        </div>\n        <button class=\"btn--round\">\n          <svg class=\"\">\n            <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n          </svg>\n        </button>\n      </div>\n\n      <div class=\"recipe__ingredients\">\n        <h2 class=\"heading--2\">Recipe ingredients</h2>\n        <ul class=\"recipe__ingredient-list\">\n\n        ${recipe.ingredients\n          .map(ingredient => {\n            const ing = ingredient.split(' ');\n            return `\n          <li class=\"recipe__ingredient\">\n            <svg class=\"recipe__icon\">\n              <use href=\"src/img/icons.svg#icon-check\"></use>\n            </svg>\n            <div class=\"recipe__quantity\">${ing[0]}</div>\n            <div class=\"recipe__description\">\n              <span class=\"recipe__unit\">${ing[1]}</span>\n              ${ing[2]}\n            </div>\n          </li>\n          `;\n          })\n          .join('')}\n\n        </ul>\n      </div>\n\n      <div class=\"recipe__directions\">\n        <h2 class=\"heading--2\">How to cook it</h2>\n        <p class=\"recipe__directions-text\">\n          This recipe was carefully designed and tested by\n          <span class=\"recipe__publisher\">${\n            recipe.publisher\n          }</span>. Please check out\n          directions at their website.\n        </p>\n        <a\n          class=\"btn--small recipe__btn\"\n          href=\"${recipe.sourceUrl}\"\n          target=\"_blank\">\n          <span>Directions</span>\n          <svg class=\"search__icon\">\n            <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n          </svg>\n        </a>\n      </div>\n    `;\n\n    recipeContainer.innerHTML = '';\n    recipeContainer.insertAdjacentHTML('afterbegin', markup);\n  } catch (err) {\n    console.log(err);\n  }\n};\nshowRecipe();\n"],"names":[],"version":3,"file":"index.430fc437.js.map","sourceRoot":"/__parcel_source_root/"}